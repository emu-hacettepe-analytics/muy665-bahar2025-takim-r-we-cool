---
title: "MUY665 PROJE"
author: "R_we_cool"
date: "2025"
format:
  html:
    theme: flatly   
number-sections: true
---

## Genel Bakış ve Kapsamı

Bu projede, farklı markalara ve teknik donanım özelliklerine sahip 991 adet dizüstü bilgisayara ilişkin fiyat, donanım ve bilgisayar puanı (Rating) verileri incelenmiştir. Çalışmanın temel amacı, bilgisayar puanını etkileyen en önemli teknik özellikleri belirlemek ve fiyat–performans dengesi üzerine çıkarımlar yapmaktır.

Bu kapsamda aşağıdaki analiz adımları gerçekleştirilmiştir:

1.  **Veri İncelemesi ve Temizliği:**\
    Veri setindeki eksik değerler, kategorik ve sayısal veri dönüşümleri yapılmış, fiyatlar INR'den USD'ye çevrilmiştir.

2.  **Betimleyici İstatistikler ve Görselleştirme:**\
    Sayısal değişkenlerin ortalama ve standart sapmaları hesaplanmış; kategorik değişkenlerin dağılımları grafiklerle analiz edilmiştir.

3.  **İlişki Analizleri:**\
    Rating değişkeni ile donanım özellikleri arasındaki ilişkiler grafiksel olarak ve korelasyonla incelenmiştir.

4.  **Modelleme Aşaması:**\
    Lineer regresyon modeli kurulmuş ve hata metrikleri (RMSE, MAE) ile model başarımı değerlendirilmiştir.

Bu analizler sonucunda bilgisayar performansını etkileyen başlıca faktörler belirlenmiş ve kullanıcılar için daha verimli laptop seçim kriterleri ortaya koyulmuştur.

## Veri Hakkında Genel Bilgiler

Analiz için kullanılan `laptops.csv` veri seti, Hindistan pazarında satılan farklı laptop modellerine ait hem teknik donanım bilgilerini hem de bilgisayar puanlarını içermektedir.

-   **Gözlem Sayısı:** Toplamda **991** satır bulunmaktadır. Her satır bir dizüstü bilgisayar konfigürasyonuna (örneğin, "HP Pavilion 15", 8GB RAM, Core i5, 512GB SSD) karşılık gelir.
-   **Sütun Sayısı:** Veri setinde **22 değişken** bulunmaktadır.

### Kaynak ve Dönüştürmeler

-   Fiyatlar Hindistan Rupisi (INR) cinsindendir, analizde kullanılmak üzere `1 USD ≈ 83 INR` kuru ile USD'ye çevrilmiştir.
-   `brand`, `processor_tier`, `gpu_brand`, `primary_storage_type`, `ram_memory` gibi kategorik değişkenler faktör tipine dönüştürülmüştür.
-   Tüm sayısal değişkenler (örneğin `Price`, `Rating`, `display_size`, `num_cores`) analizlerde kullanılmak üzere `numeric` tipe çevrilmiştir.

### Anahtar Değişkenler

| Değişken | Tür | Açıklama |
|-------------------|-------------------|----------------------------------|
| `brand` | Faktör | Laptop markası (HP, Lenovo, Asus, vb.) |
| `processor_tier` | Faktör | İşlemci seviyesi (Core i3/i5/i7, Ryzen 3/5/7) |
| `gpu_brand` | Faktör | Ekran kartı markası (Intel, AMD, NVIDIA) |
| `ram_memory` | Faktör | RAM kapasitesi (GB) |
| `Price` | Sayısal | Laptop fiyatı (USD) |
| `Rating` | Sayısal | Bilgisayar puanı (1–100 puan arası) |
| `primary_storage_type` | Faktör | Birincil depolama tipi (SSD, HDD) |
| `primary_storage_capacity` | Sayısal | Birincil depolama kapasitesi (GB) |
| `display_size` | Sayısal | Ekran boyutu (inç) |
| `num_cores` | Sayısal | İşlemci çekirdek sayısı |
| `is_touch_screen` | Faktör | Dokunmatik ekran var/yok |

### Kullanım Alanı ve Sınırlamalar

-   Bu veri seti; ürün konumlandırma, fiyat performans analizi, müşteri beklentisi modelleme gibi iş analitiği çalışmalarına uygundur.
-   Veri yalnızca Hindistan pazarındaki ürünleri yansıttığı için küresel genelleme sınırlı olabilir.

Veri seti bu haliyle hem betimleyici analizler hem de tahmine dayalı modelleme çalışmaları için ideal bir yapıya sahiptir.

### Ön İşleme ve Kütüphanelerin İmplementasyonu

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(ggplot2)
library(GGally)
library(stringr)
library(dplyr)
library(car)
library(scales)
library(kableExtra)
library(DT)
library(tidyr)
getwd()
data_new <- read.csv("laptops.csv")
data_new$Price <- as.numeric(data_new$Price/83)
datatable(
  head(data_new, 10),
  caption = "Veri Setinin İlk 10 Satırı",
  options = list(
    pageLength = 5,       # Her sayfada yalnızca 5 satır göster
    scrollX    = TRUE,    # Yatay kaydırma çubuğu ekle
    autoWidth  = FALSE     # Sütun genişliklerini otomatik ayarla
  ),
  class = 'stripe hover cell-border'  # Daha sıkışık bir görünüm için
)

```

```{r}

sum(is.na(data_new)) # we can see the NA values are added 
sum(duplicated(data_new)) # no duplicated 
dim(data_new)
```

```{r}
str(data_new)
```

```{r}
descriptive_stats <- data_new %>%
  summarise(across(where(is.numeric), list(
    mean = ~mean(.x, na.rm = TRUE),
    sd = ~sd(.x, na.rm = TRUE)
  )))
kable(descriptive_stats, digits = 2, caption = "Tanımlayici İstatistikler") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)


#print(descriptive_stats)
```

### Veri Analizi

```{r}

# Convert relevant columns to factors
data_new$brand <- as.factor(data_new$brand)
data_new$Model <- as.factor(data_new$Model)
data_new$processor_brand <- as.factor(data_new$processor_brand)
data_new$processor_tier <- as.factor(data_new$processor_tier)
data_new$primary_storage_type <- as.factor(data_new$primary_storage_type)
data_new$secondary_storage_type <- as.factor(data_new$secondary_storage_type)
data_new$gpu_brand <- as.factor(data_new$gpu_brand)
data_new$gpu_type <- as.factor(data_new$gpu_type)
data_new$OS <- as.factor(data_new$OS)
data_new$is_touch_screen <- as.factor(data_new$is_touch_screen)
data_new$year_of_warranty <- as.factor(data_new$year_of_warranty)
data_new$ram_memory <- as.factor(data_new$ram_memory)
data_new$num_cores <- as.factor(data_new$num_cores)

# Convert relevant columns to numeric
data_new$Price <- as.numeric(data_new$Price)
data_new$Rating <- as.numeric(data_new$Rating)
data_new$num_threads <- as.numeric(data_new$num_threads)
data_new$primary_storage_capacity <- as.numeric(data_new$primary_storage_capacity)
data_new$secondary_storage_capacity <- as.numeric(data_new$secondary_storage_capacity)
data_new$display_size <- as.numeric(data_new$display_size)
data_new$resolution_width <- as.numeric(data_new$resolution_width)
data_new$resolution_height <- as.numeric(data_new$resolution_height)

```

İşlemci seviyeleri arasında dikkat çekici sıklık farkları var mı?

```{r}

f = table(data_new$processor_tier)
f_data = data.frame(f)

ggplot(f_data, aes(x = reorder(Var1, Freq), y = Freq, fill = Var1)) + 
  geom_bar(stat = "identity") +
  labs(title = "İşlemci Alt Modeline Gore Bar Plot Çizimi", y = "Frekans", x = "İşlemci Alt Modeli") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))  # X ekseni etiketlerini döndür

```

Çubuk grafik incelendiğinde, işlemci seviyeleri arasında en yaygın olanın Core i5 olduğu görülmektedir. Teorik olarak, çoğu müşterinin Core i5 performansından memnun olduğu söylenebilir.

Laptop Puanlarının Histogramı

```{r}
ggplot(data_new, aes(x=Rating)) + geom_histogram(binwidth=5, fill='green3', color='black') + theme_minimal() + ggtitle('Laptop Ratinglerinin Histogramı
')+ scale_x_continuous(breaks = seq(min(data_new$Rating), max(data_new$Rating), by = 5))  # Tick aralıklarını belirler


```

GPU markasının (örneğin NVIDIA, AMD) laptop puanlarına etkisi nedir?

```{r}
summary_table_rating <- data_new %>%
  group_by(gpu_brand) %>%
  summarise(average_rating = mean(Rating, na.rm = TRUE))

ggplot(summary_table_rating, aes(x=gpu_brand, y=average_rating, fill=gpu_brand)) +
  geom_bar(stat='identity') +
  ggtitle('GPU Markasına Gore Ratingler') +
  xlab('GPU Markası') +
  ylab('Ortalama Rating') +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

GPU markasının laptop fiyatlarına etkisi nedir?

```{r}
summary_table_price <- data_new %>%
  group_by(gpu_brand) %>%
  summarise(average_price = mean(Price, na.rm = TRUE))

ggplot(summary_table_price, aes(x=gpu_brand, y=average_price, fill=gpu_brand)) +
  geom_bar(stat='identity') +
  ggtitle('GPU Markasına Gore Fiyatlar') +
  xlab('GPU Markası') +
  ylab('Ortalama Fiyat ($)') +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Laptop fiyatları, işlemci markası ve GPU türüne göre nasıl değişmektedir?

```{r}
ggplot(data_new, aes(x = processor_brand, y = Price, color = gpu_type)) +
  geom_point(alpha = 0.6) +
  labs(title = ' GPU Tipine Gore Fiyat ve İşlemci Markası İlişkisi', x = 'İşlemci Markası', y = 'Fiyat') +
  theme_minimal() +
  scale_y_continuous(labels = scales::dollar_format(prefix = '$ '))
```

İşlemci markası ile fiyat arasındaki ilişkiyi GPU türüne göre renklendirilmiş olarak gösteren grafik

Laptop puanları, işlemci markası ve GPU türüne göre nasıl değişmektedir?

```{r}
ggplot(data_new, aes(x = processor_brand, y = Rating, color = gpu_type)) +
  geom_point(alpha = 0.6) +
  labs(title = ' GPU Tipine Gore Rating ve İşlemci Markası İlişkisi', x = 'İşlemci Markası', y = 'Rating') +
  theme_minimal() +
  scale_y_continuous(labels = scales::dollar_format(prefix = ''))

```

Çekirdek sayısı ile laptop puanları arasında, işlemci markasına göre bir ilişki var mı?

```{r}
ggplot(data_new, aes(x = num_cores, y = Rating, color = processor_brand)) +
  geom_point() +
  labs(title = "Çekirdek Sayısı vs. Rating",
       x = "Çekirdek Sayısı",
       y = "Rating") +
  theme_minimal()

```

Çekirdek sayısı ile puanlar arasında doğrusal bir ilişki olduğu söylenebilir.

Fiyat ile puanlama arasında bir korelasyon var mı?

```{r}
cor(data_new$Price, data_new$Rating, use='complete.obs')

ggplot(data_new, aes(x = Price, y = Rating)) +
  geom_point() +
  geom_smooth(method = 'lm', col = 'blue') +
  ggtitle('Fiyat ve Rating Arasındaki İlişki (Scatter Plot)') +
  xlab('Fiyat') +
  ylab('Rating') +
  scale_x_continuous(breaks = seq(0, 6000, by = 500),
                     labels = comma)

```

Gözlemlendiği üzere, iki değişken arasında yaklaşık 0.661 korelasyon katsayısı ile orta düzeyde pozitif bir ilişki vardır.

Puanlar, farklı birincil depolama türleri ve kapasitelerine göre nasıl değişmektedir?

```{r}
ggplot(data_new, aes(x=primary_storage_capacity, y=Rating, fill=primary_storage_type)) +
  geom_boxplot() +
  ggtitle('Ratinge Gore Birincil Depolama Turleri ve Kapasiteler') +
  xlab('Birincil Depolama Kapasitesi') +
  ylab('Rating') +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Kutu grafiği, özellikle daha yüksek kapasiteli SSD'lerin, HDD'lere kıyasla daha yüksek ve tutarlı puanlarla kullanıcılar tarafından açıkça tercih edildiğini göstermektedir.

Puanlar, işlemci markası, GPU markası ve RAM bellek kombinasyonlarına göre nasıl değişiyor?

```{r}
library(dplyr)
summary_table <- data_new %>%
  group_by(processor_brand, gpu_brand, ram_memory) %>%
  summarise(average_rating = mean(Rating, na.rm = TRUE))
ggplot(summary_table, aes(x=ram_memory, y=interaction(processor_brand, gpu_brand), fill=average_rating)) +
  geom_tile() +
  scale_fill_gradient(low='blue', high='red') +
  ggtitle('İşlemci Markası, GPU Markası ve Ram Kapasitesine Gore Isı Haritası Çizimi') +
  xlab('RAM Kapasitesi (GB)') +
  ylab('İşlemci Markası ve GPU Markası') +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Daha yüksek RAM kapasitelerine ve AMD ya da Intel işlemcilerle NVIDIA GPU kombinasyonlarına sahip laptoplar, genellikle daha yüksek puanlar almaktadır.

Farklı laptop markaları (örneğin Dell, HP, Lenovo) ortalama puanı nasıl etkiliyor? Hipotez: Apple gibi bazı markalar, diğerlerine kıyasla daha yüksek ortalama puanlara sahiptir.

```{r}
summary_table_rating <- data_new %>%
  group_by(brand) %>%
  summarise(average_rating = mean(Rating, na.rm = TRUE))

ggplot(summary_table_rating, aes(x=brand, y=average_rating, fill=brand)) +
  geom_bar(stat='identity') +
  ggtitle('Laptop Markasına Gore Ortalama Rating') +
  xlab('Laptop Markası') +
  ylab('Ortalama Rating') +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
summary_table_rating <- data_new %>%
  group_by(brand) %>%
  summarise(average_rating = mean(Rating, na.rm = TRUE)) %>%
  arrange(desc(average_rating))  # sıralama

summary_table_rating$brand <- factor(summary_table_rating$brand, levels = summary_table_rating$brand)

summary_table_rating <- summary_table_rating %>%
  mutate(highlight = ifelse(brand == "apple", "apple", "Diger"))  # imleç sütunu ekle

ggplot(summary_table_rating, aes(x = brand, y = average_rating, fill = highlight)) +
  geom_bar(stat = 'identity') +
  scale_fill_manual(values = c("apple" = "red", "Diger" = "gray")) +
  ggtitle('Laptop Markasına Göre Ortalama Rating (Apple Vurgulu)') +
  xlab('Laptop Markası') +
  ylab('Ortalama Rating') +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.title = element_blank())

```

## Çıkarımlar ve Sonuçlar

Bu proje kapsamında yapılan analizler doğrultusunda aşağıdaki önemli çıkarımlar elde edilmiştir:

-   **Fiyat–Performans Dengesinde** orta seviye işlemciler (özellikle Core i5) yüksek bilgisayar puanı sağlarken, aşırı yüksek donanım özellikleri her zaman daha yüksek `Rating` ile sonuçlanmamaktadır.
-   **SSD tipi birincil depolama birimleri** ve daha yüksek **RAM kapasiteleri**, bilgisayar puanları anlamlı şekilde artırmaktadır.
-   GPU markaları arasında **NVIDIA** ekran kartına sahip modellerin ortalama puanları genellikle daha yüksektir. Entegre grafik birimlerine sahip modellerde puanlar görece düşüktür.
-   **Laptop fiyatı ile bilgisayar puanı arasında pozitif ama zayıf bir ilişki** gözlemlenmiştir. Bu durum, daha pahalı laptopların her zaman daha memnuniyet verici olmadığını göstermektedir.
-   Modelleme sonucunda `Price`, `ram_memory`, `gpu_brand` gibi değişkenlerin `Rating` üzerinde anlamlı etkileri olduğu görülmüştür. Ancak modelin açıklayıcılığı orta seviyede kalmıştır.

**Genel Sonuç:** Bilgisayar puanı sadece fiyata değil; SSD varlığı, RAM kapasitesi ve ekran kartı özellikleri gibi teknik faktörlere dayanmaktadır. Bu bağlamda üreticilerin fiyatı artırmak yerine doğru konfigürasyonlara odaklanmaları, müşteri memnuniyetini artırmada daha etkili olacaktır.

Rating açısından değerlendirildiğinde LG ve MSI en yüksek ortalama ratinge sahipken jio ve primebook markaları en düşük ortalama ratinge sahiptir. Apple marka laptoplar ise fiyat açısından pahalı olmasına rağmen rating olarak bu sıralamanın ortalarında kalmaktadır. Paramızı boşa harcamayıp daha fiyat performans laptoplar alalım. :)

## Model Uygulama (OPSİYONEL)

### Lineer Regresyon Modeli ile Rating Tahmini

Lineer regresyon, bir bağımlı değişkeni (burada `Rating`) bir veya daha fazla bağımsız değişken (örneğin `Price`, `ram_memory`, `gpu_brand`) yardımıyla tahmin etmeye çalışan istatistiksel bir yöntemdir.

Bu modellemede amaç: \> *"Bir laptopun fiyatı, RAM kapasitesi ve GPU markası bilindiğinde bu laptopun kullanıcıdan alacağı puanı (Rating) ne kadar doğru tahmin edebiliriz?"* sorusuna cevap aramaktır.

**Neden bu değişkenler seçildi?** - `Price`: Kullanıcıların fiyat–memnuniyet ilişkisini ölçmek için. - `ram_memory`: RAM, performans açısından kritik bir unsur. - `gpu_brand`: Grafik kartı, oyun ve görsel işlemler için önemli, kullanıcı etkisini gösterebilir.

Aşağıda bu değişkenleri içeren basit bir lineer regresyon modeli kurulmuştur:

```{r}
library(Metrics)

# RAM verisini sayısala çevirme
data_new$ram_memory_num <- as.numeric(gsub("GB", "", as.character(data_new$ram_memory)))

# Lineer regresyon modeli
model <- lm(Rating ~ Price + ram_memory_num + gpu_brand, data = data_new)
summary(model)
```

### Tahmin Başarısı ve Hata Metrikleri

Modelin performansını değerlendirmek için iki hata metriği hesaplanır:

-   **RMSE (Root Mean Square Error):** Hataların karelerinin ortalamasının kareköküdür. Ortalama hata büyüklüğünü gösterir.
-   **MAE (Mean Absolute Error):** Gerçek değerlerle tahminler arasındaki mutlak farkların ortalamasıdır.

Bu metrikler ne kadar küçükse modelin tahmin başarısı o kadar iyidir.

```{r}
predicted <- predict(model, newdata = data_new)
rmse_val <- rmse(data_new$Rating, predicted)
mae_val <- mae(data_new$Rating, predicted)

paste("RMSE:", round(rmse_val, 2))
paste("MAE:", round(mae_val, 2))
```

### Gerçek ve Tahmin Edilen Rating Dağılımı (Grafik)

Aşağıdaki grafik, her gözlem için gerçek `Rating` değeri ile modelin tahmin ettiği değeri karşılaştırır. 45°'lik kırmızı kesikli çizgi, mükemmel tahminleri temsil eder. Noktalar bu çizgiye ne kadar yakınsa model o kadar başarılıdır.

```{r}
ggplot(data.frame(Gercek = data_new$Rating, Tahmin = predicted), aes(x = Gercek, y = Tahmin)) +
  geom_point(alpha = 0.5, color = "steelblue") +
  geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "red") +
  labs(title = "Gercek vs Tahmin Edilen Rating", x = "Gercek Rating", y = "Tahmin Edilen Rating") +
  theme_minimal()
```

Bu grafik modelimizin **tahmin ettiği** `Rating` değerleri ile **gerçek** `Rating` değerlerini karşılaştırır:

-   **X Ekseni:** Gerçek kullanıcı puanları (Rating).\
-   **Y Ekseni:** Modelin tahmin ettiği puanlar (`predicted`).

Grafikteki elemanlar:

1\. **Noktalar**: Her nokta bir laptop modelini temsil eder; konumu gerçek ve tahmin edilen puanları gösterir.\
2. **Kırmızı kesikli çizgi (45° doğrusu)**:\
- Bu çizgi, “tahmin = gerçek” durumunu gösterir.\
- Noktalar bu çizgiye ne kadar yakınsa model o kadar isabetli tahmin yapmış demektir.\
- Çizgiden uzak noktalar, modelin o gözlemde hata yaptığını gösterir.\
- Noktalar çoğunlukla çizgi etrafında toplanmışsa, model hataları küçüktür.\
- Çizgiden uzak sapmalar, özellikle hangi konfigürasyonlarda hatanın büyük olduğunu işaret eder.

### Yorum

-   Model sonuçları, özellikle `ram_memory` ve `gpu_brand` değişkenlerinin `Rating` üzerinde anlamlı etkiler yarattığını göstermektedir.
-   RMSE ve MAE değerleri modelin hatalarının makul düzeyde olduğunu işaret etmektedir.
-   Gerçek ve tahmin edilen değerler arasındaki dağılım, modelin genel eğilimleri yakalayabildiğini ancak varyansın tamamen açıklanamadığını göstermektedir.
